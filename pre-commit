#!/bin/bash
#
# Author: Nikolaos Dimopoulos
# Based on code by Remigijus Jarmalavičius
# Modify by: uTip SAS (https://utip.io)
#
# Checks the files to be committed for the presence of print_r(), var_dump() and die()
# The array below can be extended for further checks

verbose=false

checks[1]="var_dump("
checks[2]="print_r("
checks[3]="die"

element_count=${#checks[@]}
let "element_count = $element_count + 1"

ROOT_DIR="$(pwd)/"
LIST=$(git diff --cached --name-status)
ERRORS_BUFFER=""
for file in $LIST
do
    if [ "$file" == '#' ]; then
        continue
    fi
    if [ $(echo "$file" | grep '^M$') ]; then
        FILE_ACTION='modified'
    elif [ $(echo "$file" | grep '^A$') ]; then
        FILE_ACTION='added'
    else 
        EXTENSION=$(echo "$file" | grep ".php$")
        if [ "$EXTENSION" != "" ]; then

            index=1
            while [ "$index" -lt "$element_count" ]
            do
                if [ "$verbose" == 'true' ]; then
                    echo "Checking $FILE_ACTION file: $file [${checks[$index]}]";
                fi
                ERRORS=$(grep "${checks[$index]}" $ROOT_DIR$file >&1)
                if [ "$ERRORS" != "" ]; then
                    if [ "$ERRORS_BUFFER" != "" ]; then
                        ERRORS_BUFFER="$ERRORS_BUFFER\n$ERRORS"
                    else
                        ERRORS_BUFFER="$ERRORS"
                    fi
                    echo "${checks[$index]} found in file: $file "
                fi
                let "index = $index + 1"
            done
        fi
    fi
done

if [ "$ERRORS_BUFFER" != "" ]; then
    echo
    echo "You cannot commit code with the following text: "
    echo -e $ERRORS_BUFFER
    echo
    echo "Can't commit, remove the forbidden code first."
    exit 1
else
    echo "Commited successfully."
fi
